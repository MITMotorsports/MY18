static uint32_t lastt = 0;
static can0_BMSHeartbeat_T bms_hold = {};

bms_hold.error_pec |= bms_errors.error_pec;
bms_hold.error_cvst |= bms_errors.error_cvst;
bms_hold.error_owt |= bms_errors.error_owt;
bms_hold.error_L_contactor_error |= bms_errors.error_L_contactor_error;
bms_hold.error_H_contactor_error |= bms_errors.error_H_contactor_error;
bms_hold.error_L_contactor_weld |= bms_errors.error_L_contactor_weld;
bms_hold.error_H_contactor_weld |= bms_errors.error_H_contactor_weld;
bms_hold.error_cell_under_voltage |= bms_errors.error_cell_under_voltage;
bms_hold.error_cell_over_voltage |= bms_errors.error_cell_over_voltage;
bms_hold.error_cell_under_temp |= bms_errors.error_cell_under_temp;
bms_hold.error_cell_over_temp |= bms_errors.error_cell_over_temp;
bms_hold.error_control_flow |= bms_errors.error_control_flow;
bms_hold.error_blown_fuse |= bms_errors.error_blown_fuse;
bms_hold.L_contactor_closed |= bms_errors.L_contactor_closed;
bms_hold.H_contactor_closed |= bms_errors.H_contactor_closed;
bms_hold.L_contactor_welded |= bms_errors.L_contactor_welded;
bms_hold.H_contactor_welded |= bms_errors.H_contactor_welded;

if (HAL_GetTick() - lastt > 1000) {
  HAL_GPIO_TogglePin(GPIO(LED));

  static uint8_t cnt = 0;
  cnt++;
  if (cnt > 20) {
    printf("RELEASING HELD BMS ERRS\r\n");
    memset(&bms_hold, 0, sizeof(bms_hold));
  }

  printf("error_pec: %d HELD: %d\r\n", bms_errors.error_pec, bms_hold.error_pec);
  printf("error_cvst: %d HELD: %d\r\n", bms_errors.error_cvst, bms_hold.error_cvst);
  printf("error_owt: %d HELD: %d\r\n", bms_errors.error_owt, bms_hold.error_owt);
  printf("error_L_contactor_error: %d HELD: %d\r\n", bms_errors.error_L_contactor_error, bms_hold.error_L_contactor_error);
  printf("error_H_contactor_error: %d HELD: %d\r\n", bms_errors.error_H_contactor_error, bms_hold.error_H_contactor_error);
  printf("error_L_contactor_weld: %d HELD: %d\r\n", bms_errors.error_L_contactor_weld, bms_hold.error_L_contactor_weld);
  printf("error_H_contactor_weld: %d HELD: %d\r\n", bms_errors.error_H_contactor_weld, bms_hold.error_H_contactor_weld);
  printf("error_cell_under_voltage: %d HELD: %d\r\n", bms_errors.error_cell_under_voltage, bms_hold.error_cell_under_voltage);
  printf("error_cell_over_voltage: %d HELD: %d\r\n", bms_errors.error_cell_over_voltage, bms_hold.error_cell_over_voltage);
  printf("error_cell_under_temp: %d HELD: %d\r\n", bms_errors.error_cell_under_temp, bms_hold.error_cell_under_temp);
  printf("error_cell_over_temp: %d HELD: %d\r\n", bms_errors.error_cell_over_temp, bms_hold.error_cell_over_temp);
  printf("error_control_flow: %d HELD: %d\r\n", bms_errors.error_control_flow, bms_hold.error_control_flow);
  printf("error_blown_fuse: %d HELD: %d\r\n", bms_errors.error_blown_fuse, bms_hold.error_blown_fuse);
  printf("L_contactor_closed: %d HELD: %d\r\n", bms_errors.L_contactor_closed, bms_hold.L_contactor_closed);
  printf("H_contactor_closed: %d HELD: %d\r\n", bms_errors.H_contactor_closed, bms_hold.H_contactor_closed);
  printf("L_contactor_welded: %d HELD: %d\r\n", bms_errors.L_contactor_welded, bms_hold.L_contactor_welded);
  printf("H_contactor_welded: %d HELD: %d\r\n", bms_errors.H_contactor_welded, bms_hold.H_contactor_welded);

  lastt = HAL_GetTick();
}
